#!/usr/bin/env node

/*
Copyright (c) 2013, Yahoo! Inc. All rights reserved.
Code licensed under the BSD License:
http://yuilibrary.com/license/
*/

var checker = require('../lib/index');

var args = require('../lib/args').parse();
var mkdirp = require('mkdirp');
var path = require('path');
var fs = require('fs');
var _ = require('underscore');

checker.init(args, function(json) {
    if (args.json) {
        var dir = path.dirname(args.json);
        mkdirp.sync(dir);
        fs.writeFileSync(args.json, JSON.stringify(json, null, 4) + '\n', 'utf8');
        console.log('file writtens', args.json);
    } else if (args.groupedjson) {
        var grouped = {};
        _(_.keys(json)).map(function(key) {
          var licenses = json[key].licenses;
          if (licenses == null || licenses === '') {
            grouped.unknown = grouped.unknown || [];
            grouped.unknown.push(key);
          } else {
            if (!(licenses instanceof Array)) {
              licenses = [licenses];
            }
            _(licenses).each(function(license) {
              grouped[license] = grouped[license] || [];
              grouped[license].push(key);
            });
          }
        });
        console.log(JSON.stringify(grouped, true, 2));
    } else if (args.tabs) {
      var packageJson = require(path.join(process.cwd(), 'package.json'));
      _(_.keys(json)).each(function(key) {
        var module = json[key];
        var nameAndVersion = key.split('@');
        //console.log(packageJson.name, nameAndVersion[0]);
        if (packageJson.name === nameAndVersion[0]) {
          return; // components own license. omit
        }
        var license = module.licenses;
        if (license == null || license == '') {
          license = 'UNKNOWN';
        } else if (license instanceof Array) {
          license = license.join(',');
        }
        console.log([packageJson.name, nameAndVersion[0], nameAndVersion[1], license, 'module', '', module.repository].join('\t'));
      });

    } else {
        checker.print(json);
    }
});
